<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="se.splushii.dancingbunnies">

    <!-- UPDATE "PRIVACY_POLICY.md" WHEN ADDING/REMOVING PERMISSIONS -->
    <!--
    For reference, all available Android permissions with descriptions available at:
      https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/res/AndroidManifest.xml
    User visible "permission descriptions" available in English at:
      https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/res/res/values/strings.xml
    -->

    <!--
    "run foreground service":
      https://developer.android.com/reference/android/Manifest.permission.html#FOREGROUND_SERVICE
    Needed to run audio player with notifications
    -->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE"/>

    <!--
    "have full network access":
      https://developer.android.com/reference/android/Manifest.permission.html#INTERNET
    Needed to communicate with backends and cast audio tracks
    -->
    <uses-permission android:name="android.permission.INTERNET" />

    <!--
    "view network connections":
      https://developer.android.com/reference/android/Manifest.permission.html#ACCESS_NETWORK_STATE
    Needed to communicate with backends and cast audio tracks
    -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />

    <!--
    "prevent phone from sleeping":
      https://developer.android.com/reference/android/Manifest.permission#WAKE_LOCK
    Needed to run audio player with notifications
    -->
    <uses-permission android:name="android.permission.WAKE_LOCK" />

    <!--
    "run at startup":
      https://developer.android.com/reference/android/Manifest.permission#RECEIVE_BOOT_COMPLETED
    Needed to schedule/run tasks (such as backend syncs)
    -->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />

    <application
        android:allowBackup="true"
        android:icon="@mipmap/dancingbunnies_icon"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/AppTheme"
        android:usesCleartextTraffic="true"
        >
        <meta-data
            android:name="com.google.android.gms.cast.framework.OPTIONS_PROVIDER_CLASS_NAME"
            android:value="se.splushii.dancingbunnies.audioplayer.CastOptionsProvider" />
        <activity
            android:name=".MainActivity"
            android:launchMode="singleTop"
            android:label="@string/app_name"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <action android:name="android.intent.action.SEARCH" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
            <meta-data
                android:name="android.app.searchable"
                android:resource="@xml/searchable" />
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />
                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />
                <data
                    android:scheme="https"
                    android:host="splushii.se"
                    android:path="/dancingbunnies.app" />
            </intent-filter>
        </activity>
        <activity
            android:name=".ui.settings.SettingsActivity"
            android:label="@string/title_activity_settings"
            android:theme="@style/AppTheme"/>
        <service
            android:name=".audioplayer.AudioPlayerService"
            android:exported="true">
            <intent-filter>
                <action android:name="android.media.browse.MediaBrowserService" />
                <action android:name="android.intent.action.MEDIA_BUTTON" />
            </intent-filter>
        </service>
        <service android:name=".musiclibrary.MusicLibraryService" />
        <receiver android:name="androidx.media.session.MediaButtonReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON" />
            </intent-filter>
        </receiver>
        <receiver android:name=".audioplayer.CastMediaIntentReceiver" />
        <receiver
            android:name="androidx.mediarouter.media.MediaTransferReceiver"
            android:exported="true" />
    </application>
</manifest>